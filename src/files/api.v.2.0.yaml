openapi: 3.0.3
info:
  title: Entertainment
  version: '2.0'
  contact:
    email: jmarroyave.compsci@gmail.com
    name: jmarroyave
  description: API for accessing a catalog of entertainment options available
servers:
  - url: 'http://localhost:8080/2.0/api'
paths:
  /info/about:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoAbout'
      operationId: get-info-about
      description: Returns the about info
      summary: InfoAbout
    parameters: []
  /dashboard/home:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardHome'
      operationId: get-home-dashboard
      description: Returns the dashboard for the home page
      summary: DashboardHome
    parameters: []
  /dashboard/movies:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardMovies'
      operationId: get-movie-dashboard
      description: Returns the dashboard for the movies page
      summary: DashboardMovies
    parameters: []
  /dashboard/podcasts:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardPodcasts'
      operationId: get-podcast-dashboard
      description: Returns the dashboard for the podcasts page
      summary: DashboardPodcasts
    parameters: []
  /dashboard/people:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardPeople'
      operationId: get-people-dashboard
      description: Returns the dashboard for the people page
      summary: DashboardPeople
    parameters: []
  /dashboard/tv-shows:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardTV'
      operationId: get-tv-dashboard
      description: Returns the dashboard for the tv page
      summary: DashboardTVShows
    parameters: []
  /dashboard/tv-shows-episodes:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardTV'
      operationId: get-tv-episodes-dashboard
      description: Returns the dashboard for the tv page
      summary: DashboardTVShowsEpisodes
    parameters: []
  /dashboard/video-games:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardGame'
      operationId: get-game-dashboard
      description: Returns the dashboard for the games page
      summary: DashboardVideoGames
    parameters: []
  '/movies/{id}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
      operationId: get-movie
      description: 'return the movie with {id}'
      summary: Movie
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /movie-festivals:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovieFestival'
      operationId: get-movie-festivals
      description: 'return the movie festivals '
      summary: MovieFestivals
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
    parameters: []
  '/movie-festivals/{id}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieFestival'
      description: 'return the movie festivals '
      summary: MovieFestival
      operationId: get-movie-festival
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /tv-shows:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TVShow'
      operationId: get-tv-shows
      description: 'return the movie festivals '
      summary: TVShows
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
    parameters: []
  '/tv-shows/{id}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TVShow'
      description: 'return the movie festivals '
      summary: TVShow
      operationId: get-tv-show
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/tv-shows/episode/{id}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TVShowEpisode'
      description: return tv show episodes
      summary: TVShowEpisode
      operationId: get-tv-show-episode
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /video-games:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VideoGame'
      operationId: get-video-games
      description: 'return the movie festivals '
      summary: VideoGames
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
    parameters: []
  '/video-games/{id}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoGame'
      description: 'return the movie festivals '
      summary: VideoGame
      operationId: get-video-game
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/podcasts/{id}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Podcast'
      operationId: get-podcast
      description: 'returns the podcast with {id}'
      summary: Podcast
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /podcasts/category/music:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Podcast'
      operationId: get-stories-podcasts-music
      description: returns the music category podcasts
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page number
      summary: PodcastsMusic
    parameters: []
  '/people/{id}':
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
      operationId: get-person
      description: 'return the person with {id}'
      summary: Person
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id
  /stories/movies/awards:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/Movie'
      operationId: get-stories-awards
      description: returns the entities with an award
      parameters:
        - schema:
            type: integer
          in: query
          name: year
          description: year
        - schema:
            type: string
          in: query
          name: entity
          description: 'movie, tv, people'
        - schema:
            type: string
          in: query
          name: type
          description: 'oscar, goldenGlobe, emmy'
        - schema:
            type: integer
          in: query
          name: page
          description: page number
      summary: StoryMoviesAwards
    parameters: []
  /stories/movies/history:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoryMovieHistory'
      operationId: get-movie-history
      description: 'return the movie history '
      summary: StoryMoviesHistory
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
    parameters: []
  /stories/movies/remakes:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoryMovieRemakes'
      operationId: get-story-movie-remakes
      description: 'return the movie remakes '
      summary: StoryMoviesRemakes
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
    parameters: []
  /stories/people/directors:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
      operationId: get-story-movie-directors
      description: 'return movie directors '
      summary: StoryPeopleDirectors
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
    parameters: []
  /stories/people/actors:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
      operationId: get-story-movie-actors
      description: return movie actors
      summary: StoryPeopleActors
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
    parameters: []
  /stories/people/writers:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
      operationId: get-story-movie-writers
      description: 'return movie writers '
      summary: StoryPeopleWriters
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: page
    parameters: []
  /search/results:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    entity:
                      type: string
                    entityId:
                      type: string
                    description:
                      type: string
                    desc:
                      type: string
      operationId: get-search
      description: return search results for query
      parameters:
        - schema:
            type: string
          in: query
          name: qry
          description: query to search
        - schema:
            type: integer
          in: query
          name: page
          description: page number
        - schema:
            type: string
          in: query
          name: entities
          description: entities to include
      summary: SearchResults
    parameters: []
  /search/suggestions:
    get:
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: suggestion results
                properties:
                  suggestions:
                    type: array
                    items:
                      type: string
      operationId: get-search-suggestions
      parameters:
        - schema:
            type: string
          in: query
          name: qry
          description: query to search
      description: return search suggestions for query
      summary: SearchSuggestions
components:
  schemas:
    DashboardHome:
      type: object
      title: Home Dashboard
      description: ''
      properties:
        lastUpdate:
          description: Last time updated
          type: string
        people:
          $ref: '#/components/schemas/DashboardPeople'
        movies:
          $ref: '#/components/schemas/DashboardMovies'
        podcasts:
          $ref: '#/components/schemas/DashboardPodcasts'
    DashboardMovies:
      type: object
      title: Movies Dashboard
      description: ''
      properties:
        total:
          description: Number of movies
          type: number
        country:
          description: Distribution by country
          type: object
          additionalProperties:
            type: number
        genre:
          description: Distribution by genre
          type: object
          additionalProperties:
            type: number
        type:
          description: Distribution by type
          type: object
          additionalProperties:
            type: number
        yearReleased:
          description: Distribution by year released
          type: object
          additionalProperties:
            type: number
        streamBy:
          description: Distribution by streamer
          type: object
          additionalProperties:
            type: number
        rating:
          description: Distribution by rating
          type: object
          additionalProperties:
            type: number
        classification:
          description: Distribution by classification
          type: object
          additionalProperties:
            type: number
        awards:
          description: Distribution by awards
          type: object
          additionalProperties:
            type: number
    DashboardTV:
      type: object
      title: TV Show Dashboard
      description: ''
      properties:
        total:
          description: Number of movies
          type: number
        country:
          description: Distribution by country
          type: object
          additionalProperties:
            type: number
        genre:
          description: Distribution by genre
          type: object
          additionalProperties:
            type: number
        type:
          description: Distribution by type
          type: object
          additionalProperties:
            type: number
        yearReleased:
          description: Distribution by year released
          type: object
          additionalProperties:
            type: number
        streamBy:
          description: Distribution by streamer
          type: object
          additionalProperties:
            type: number
        rating:
          description: Distribution by rating
          type: object
          additionalProperties:
            type: number
        classification:
          description: Distribution by classification
          type: object
          additionalProperties:
            type: number
        awards:
          description: Distribution by awards
          type: object
          additionalProperties:
            type: number
    DashboardGame:
      type: object
      title: Games Dashboard
      description: ''
      properties:
        total:
          description: Number of movies
          type: number
        country:
          description: Distribution by country
          type: object
          additionalProperties:
            type: number
        genre:
          description: Distribution by genre
          type: object
          additionalProperties:
            type: number
        type:
          description: Distribution by type
          type: object
          additionalProperties:
            type: number
        yearReleased:
          description: Distribution by year released
          type: object
          additionalProperties:
            type: number
        rating:
          description: Distribution by rating
          type: object
          additionalProperties:
            type: number
        classification:
          description: Distribution by classification
          type: object
          additionalProperties:
            type: number
    DashboardPodcasts:
      type: object
      title: Podcasts Dashboard
      description: ''
      properties:
        total:
          type: number
        language:
          type: object
        category:
          type: object
        yearCreated:
          type: object
        country:
          type: object
    DashboardPeople:
      type: object
      title: People Dashboard
      description: ''
      properties:
        total:
          description: Number of people
          type: number
        alive:
          description: Number of people alive
          type: number
        profession:
          description: Distribution by profession
          type: object
          additionalProperties:
            type: number
        yearBirth:
          description: Distribution by birth year
          type: object
          additionalProperties:
            type: number
    Person:
      type: object
      description: Person model
      properties:
        id:
          type: string
        name:
          description: Name of the person
          type: string
          example: James Franco
        birthDate:
          type: string
        deathDate:
          type: string
        profession:
          type: array
          items:
            type: string
        awards:
          description: awards
          type: array
          items:
            $ref: '#/components/schemas/Award'
        created:
          type: string
        references:
          type: object
          properties:
            imdb:
              type: string
        directed:
          type: array
          items:
            $ref: '#/components/schemas/Movie'
        acted:
          type: array
          items:
            $ref: '#/components/schemas/Movie'
        wrote:
          type: array
          items:
            $ref: '#/components/schemas/Movie'
        '':
          type: array
          items:
            $ref: '#/components/schemas/Movie'
      required:
        - id
        - name
    Podcast:
      type: object
      description: Person model
      properties:
        id:
          description: Name of the person
          type: string
          example: James Franco
        title:
          type: string
        subtitle:
          type: string
        feedUrl:
          type: string
        description:
          type: string
        summary:
          type: string
        author:
          type: string
        link:
          type: string
        language:
          type: string
        image:
          type: string
        category:
          type: string
        subcategory:
          type: string
        createdDate:
          type: string
        created:
          type: string
        country:
          type: string
      required:
        - id
        - title
    Movie:
      type: object
      description: Movie model
      properties:
        id:
          description: Id of the movie
          type: string
          example: The lord of the rings
        title:
          description: Title of the movie
          type: string
          example: The lord of the rings
        originalTitle:
          description: Title of the movie
          type: string
          example: The lord of the rings
        type:
          description: Type
          type: string
        genre:
          description: Genre
          type: array
          items:
            type: string
        country:
          description: Country
          type: array
          items:
            type: string
        duration:
          description: Duration
          type: string
        classification:
          description: 'Classification [PG,PG13...]'
          type: string
        rating:
          description: Rating
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              averageRating:
                type: string
        streamBy:
          description: Rating
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              yearAdded:
                type: string
        awards:
          description: awards
          type: array
          items:
            $ref: '#/components/schemas/Award'
        description:
          description: Description of the movie
          type: string
          example: An architect and his wife move into a castle that is slated to become a luxury hotel. But something inside is determined to stop the renovation.
        released_date:
          description: Year of production
          type: string
        directors:
          description: Directors of the movie
          type: array
          items:
            $ref: '#/components/schemas/Person'
        cast:
          description: Cast of the movie
          type: array
          items:
            $ref: '#/components/schemas/Person'
        crew:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        writers:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        created:
          type: string
        references:
          type: object
          properties:
            imdb:
              type: string
        image:
          type: object
          properties:
            poster:
              type: string
        boxOffice:
          type: string
        production:
          type: string
        website:
          type: string
        language:
          type: string
        plot:
          type: string
      required:
        - id
        - title
    MovieFestival:
      type: object
      description: TV model
      properties:
        id:
          description: Id of the movie
          type: string
          example: The lord of the rings
        name:
          description: Title of the movie
          type: string
          example: The lord of the rings
        country:
          type: string
        wiki_topic:
          type: string
        continent:
          type: string
        established:
          type: string
      required:
        - id
        - name
    TVShow:
      type: object
      description: TV model
      properties:
        id:
          description: Id of the movie
          type: string
          example: The lord of the rings
        title:
          description: Title of the movie
          type: string
          example: The lord of the rings
        originalTitle:
          description: Title of the movie
          type: string
          example: The lord of the rings
        type:
          description: Type
          type: string
        genre:
          description: Genre
          type: array
          items:
            type: string
        country:
          description: Country
          type: array
          items:
            type: string
        duration:
          description: Duration
          type: string
        classification:
          description: 'Classification [PG,PG13...]'
          type: string
        rating:
          description: Rating
          type: object
          properties:
            name:
              type: string
            averageRating:
              type: number
            votes:
              type: number
        streamBy:
          description: Rating
          type: object
          properties:
            name:
              type: string
            yearAdded:
              type: number
        awards:
          description: awards
          type: array
          items:
            $ref: '#/components/schemas/Award'
        description:
          description: Description of the movie
          type: string
          example: An architect and his wife move into a castle that is slated to become a luxury hotel. But something inside is determined to stop the renovation.
        released_date:
          description: Year of production
          type: string
        director:
          description: Directors of the movie
          type: array
          items:
            $ref: '#/components/schemas/Person'
        cast:
          description: Cast of the movie
          type: array
          items:
            $ref: '#/components/schemas/Person'
        created:
          type: string
        references:
          type: object
          properties:
            imdb:
              type: string
        image:
          type: object
          properties:
            poster:
              type: string
        boxOffice:
          type: string
        production:
          type: string
        website:
          type: string
        language:
          type: string
        plot:
          type: string
      required:
        - id
        - title
    TVShowEpisode:
      type: object
      description: TV show episode model
      properties:
        id:
          description: Id of the movie
          type: string
          example: The lord of the rings
        title:
          description: Title of the movie
          type: string
          example: The lord of the rings
        originalTitle:
          description: Title of the movie
          type: string
          example: The lord of the rings
        type:
          description: Type
          type: string
        genre:
          description: Genre
          type: array
          items:
            type: string
        country:
          description: Country
          type: array
          items:
            type: string
        duration:
          description: Duration
          type: string
        classification:
          description: 'Classification [PG,PG13...]'
          type: string
        rating:
          description: Rating
          type: object
          properties:
            name:
              type: string
            averageRating:
              type: number
            votes:
              type: number
        streamBy:
          description: Rating
          type: object
          properties:
            name:
              type: string
            yearAdded:
              type: number
        awards:
          description: awards
          type: array
          items:
            $ref: '#/components/schemas/Award'
        description:
          description: Description of the movie
          type: string
          example: An architect and his wife move into a castle that is slated to become a luxury hotel. But something inside is determined to stop the renovation.
        released_date:
          description: Year of production
          type: string
        director:
          description: Directors of the movie
          type: array
          items:
            $ref: '#/components/schemas/Person'
        cast:
          description: Cast of the movie
          type: array
          items:
            $ref: '#/components/schemas/Person'
        created:
          type: string
        references:
          type: object
          properties:
            imdb:
              type: string
        image:
          type: object
          properties:
            poster:
              type: string
        boxOffice:
          type: string
        production:
          type: string
        website:
          type: string
        language:
          type: string
        plot:
          type: string
      required:
        - id
        - title
    VideoGame:
      type: object
      description: Game model
      properties:
        id:
          description: Id of the movie
          type: string
          example: The lord of the rings
        title:
          description: Title of the movie
          type: string
          example: The lord of the rings
        originalTitle:
          description: Title of the movie
          type: string
          example: The lord of the rings
        type:
          description: Type
          type: string
        genre:
          description: Genre
          type: array
          items:
            type: string
        country:
          description: Country
          type: array
          items:
            type: string
        duration:
          description: Duration
          type: string
        classification:
          description: 'Classification [PG,PG13...]'
          type: string
        rating:
          description: Rating
          type: object
          properties:
            name:
              type: string
            averageRating:
              type: number
            votes:
              type: number
        description:
          description: Description of the movie
          type: string
          example: An architect and his wife move into a castle that is slated to become a luxury hotel. But something inside is determined to stop the renovation.
        released_date:
          description: Year of production
          type: string
        director:
          description: Directors of the movie
          type: array
          items:
            $ref: '#/components/schemas/Person'
        cast:
          description: Cast of the movie
          type: array
          items:
            $ref: '#/components/schemas/Person'
        created:
          type: string
        references:
          type: object
          properties:
            imdb:
              type: string
        image:
          type: object
          properties:
            poster:
              type: string
        boxOffice:
          type: string
        production:
          type: string
        website:
          type: string
        language:
          type: string
      required:
        - id
        - title
    Award:
      type: object
      description: Award model
      properties:
        name:
          type: string
        year:
          type: number
        category:
          type: string
        won:
          type: boolean
    InfoAbout:
      type: object
      description: info about
      title: InfoAbout
      properties:
        sources:
          type: array
          items:
            type: object
            properties:
              added:
                type: string
              name:
                type: string
              url:
                type: string
        fetched:
          type: array
          items:
            type: object
            properties:
              added:
                type: string
              name:
                type: string
              count:
                type: number
    StoryMovieHistory:
      type: object
      description: TV model
      properties:
        title:
          description: Title of the movie
          type: string
          example: The lord of the rings
      required:
        - title
    StoryMovieRemakes:
      type: object
      description: TV model
      properties:
        title:
          description: Title of the movie
          type: string
          example: The lord of the rings
        movies:
          type: array
          items:
            $ref: '#/components/schemas/Movie'
      required:
        - title
  securitySchemes: {}
  headers: {}
  responses: {}
  parameters: {}
security: []
