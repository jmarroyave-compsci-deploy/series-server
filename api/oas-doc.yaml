openapi: 3.0.3
info:
  title: Entertainment
  version: '1.0'
  contact:
    email: jmarroyave.compsci@gmail.com
    name: jmarroyave
  description: API for accessing entertainment options available in TV
servers:
  - url: 'http://localhost:8080/api'
paths:
  /dashboard:
    get:
      responses:
        '200':
          description: Successful request 
          content:
            "application/json":
              schema:
                type: object
                $ref: '#/components/schemas/Dashboard'
      operationId: dashboardGet
      description: Returns the movies dashboard
      x-swagger-router-controlloer: dashboardRoute
  /movies:
    get:
      parameters:
        - in: query
          name: limit
          schema:
            type: integer        
            description: number of records to display
            default: 10
        - in: query
          name: page
          schema:
            type: integer        
            description: page number to display
            default: 1 
      responses:
        '200':
          description: Successful request 
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
      operationId: moviesGet
      description: Returns a list of movies
      x-swagger-router-controlloer: moviesRoute
components:
  schemas:
    Person:
      type: object
      properties:
        name:
          description: Name of the person
          type: string
          example: James Franco
      description: Person model
    Dashboard:
      type: object
      properties:
        last_update:
          description: Last time updated
          type: string
        actors:
          description: Number of actors
          type: number
        countries:
          description: Distribution by country
          type: object
          additionalProperties:
            type: number
    Movie:
      type: object
      properties:
        title:
          description: Title of the movie
          type: string
          example: The lord of the rings
        type:
          description: Type
          type: string
          enum: [TV Show, Movie]
        genre:
          description: Genre
          type: array
          items:
            type: string
        country:
          description: Country
          type: array
          items:
            type: string
        duration:
          description: Duration
          type: string
        rating:
          description: Rating
          type: string
        description:
          description: Description of the movie
          type: string
          example: An architect and his wife move into a castle that is slated to become a luxury hotel. But something inside is determined to stop the renovation.
        added_date:
          description: Year added to catalog
          type: string
        released_date:
          description: Year of production
          type: string
        director:
          description: Directors of the movie
          type: array
          items:
            type: object
            $ref: '#/components/schemas/Person'
        cast:
          description: Cast of the movie
          type: array
          items:
            type: object
            $ref: '#/components/schemas/Person'
      required:
        - title
      description: Movie model
  securitySchemes: {}
  headers: {}
  responses: {}
  parameters: {}
security: []
